Market Explorer: Feature Plan & Data Strategy
This document outlines the complete strategic plan for the "Market Explorer" page, covering both the user-facing features and the backend data strategy required for its implementation.
Section 1: Market Explorer Feature Plan
1.1. Core Objective & Target Audience
The primary objective is to create a dedicated market intelligence platform that provides high-level, strategic insights into the hospitality market's health, historical trends, and future outlook. This page is designed to be entirely market-focused, providing a macro view that is distinct from the user's individual hotel performance on the main dashboard.
* Target Audience (Primary): Hotel GMs and Revenue Managers seeking a competitive edge.
* Target Audience (Secondary): Hotel developers, investors, and analysts requiring macro trend data for strategic decisions, property valuation, and market entry analysis.
1.2. Page Structure & Features
The "Market Explorer" page will be organized into four distinct sections:
* The Macro View (Health Now):
   * Headline KPIs: Average Market Occupancy, ADR, and YoY RevPAR Growth.
   * Market Trend Indicator: A simple, bold statement summarizing the market's direction.
   * Interactive Market Map: A geographic map visualizing all hotels, color-coded by performance.
* Historical Trends & Seasonality (Predictable Patterns):
   * YoY Performance Chart: Comparing key metrics for the current year against the previous year and a 5-year average.
   * Seasonality Heatmap: A calendar view showing average daily occupancy over the last 5 years.
   * Day-of-Week Analysis: Bar charts comparing ADR and Occupancy by day of the week, YoY.
* Forward-Looking Outlook & Pacing (Where the Market is Heading):
   * Market Pacing Curve: On-the-books occupancy for the next 30/60/90 days vs. last year's pace.
   * Pickup Hotspot Table: Highlighting future weeks with the largest recent increase in bookings.
   * Future Demand Calendar: A 12-month color-coded calendar showing on-the-books demand.
* Market Segmentation (Deep Dive):
   * Performance by Quality Tier: Comparing RevPAR growth across Luxury, Midscale, and Budget segments.
   * Performance by Property Type: Comparing performance across Hotels, Resorts, etc.
   * Raw Data Export: A feature to download aggregated, anonymized market data.
1.3. Future Feature Roadmap
The following advanced features have been discussed and are approved for future consideration:
* Market Saturation Index: A feature to analyze supply vs. demand growth to assess market risk. This is on hold pending research into a viable data source for hotel development pipelines.
* Submarket Heatmap & Analysis: To be implemented using either a third-party Geocoding API or the PostGIS database extension to define and analyze neighborhood-level performance.
* Competitive Cluster Analysis: To be implemented using a K-Means clustering algorithm to automatically identify true competitive sets based on a range of attributes.
* Scenario Planner: A future tool allowing users to input parameters for a hypothetical hotel and receive a multi-year performance projection.
Section 2: Data Foundation & Extraction Strategy
2.1. The Goal & Method
To power the forward-looking features, we must construct a historical "on-the-books" dataset for every hotel. This will be achieved using a data backfill processor, which is a dedicated, one-time script per hotel.
The processor will:
1. Extract: Pull up to 5 years of historical reservation records from the Cloudbeds API.
2. Process: Analyze the raw data in-memory without storing individual, sensitive reservation details.
3. Calculate: Generate daily "on-the-books" snapshots for the entire historical period.
4. Load: Insert only the final, aggregated metrics into a new pace_snapshots table.
5. Discard: Purge the raw reservation data once the calculations are complete.
2.2. Feasibility & Constraints
This backfill approach is technically feasible, even if it requires up to 48-72 hours per hotel.
* Processing Load: The required processing rate is low and well within the capabilities of a background server task.
* Primary Constraint: The main bottleneck is the Cloudbeds API rate limit (5 requests/second). The script must be engineered to respect this limit, making data extraction the slowest phase.
* Database Size: For 1,000 hotels, the resulting pace_snapshots table is estimated to be around 25 GB, a manageable size for our infrastructure with proper indexing.
2.3. Critical Data Points & Additional Metrics
The backfill process provides an opportunity to capture a rich set of metrics. The following are critical:
* Pacing Data (Essential):
   * dateCreated: The booking date of each reservation is the cornerstone of all pace calculations.
   * stay_date (Arrival) & endDate (Departure): The processor must use both dates. For a multi-night booking, it will iterate through each night of the stay and increment the rooms_sold count for every single date between arrival and departure.
   * hotel_id and rooms_sold: To link the data correctly.
* Additional Valuable Metrics to Capture:
   * Average Booking Window: The average time between booking and stay.
   * Average Length of Stay (LOS): Can be segmented by day of week to analyze travel patterns.
   * Market-wide Cancellation Rate: A key indicator of demand certainty.
   * Source of Business Mix: The percentage of bookings from different channels (OTAs vs. Direct).
   * Geographic Demand Origin: The top source countries or cities for travelers to the market.